import java.util.Properties

plugins {
    id("com.android.application")
    // START: FlutterFire Configuration
    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
    // END: FlutterFire Configuration
    id("kotlin-android")
    id("dev.flutter.flutter-gradle-plugin")
}

// Utility functions for better configuration management
fun loadProperties(path: String): Properties {
    val properties = Properties()
    val file = rootProject.file(path)
    if (file.exists()) {
        file.inputStream().use { properties.load(it) }
    } else {
        logger.warn("Properties file not found: $path")
    }
    return properties
}
// Load keystore properties
val keystoreProperties = loadProperties("key.properties")

// Load debug keystore properties
val debugKeystoreProperties = loadProperties("debugkey.properties")


android {
    namespace = "com.example.flavorizr"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"
    
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    signingConfigs {
        create("release") {
            val keyAlias = keystoreProperties.getProperty("keyAlias")
            if (keyAlias != null) {
                this.keyAlias = keyAlias
                keyPassword = keystoreProperties.getProperty("keyPassword")
                storeFile = file(keystoreProperties.getProperty("storeFile"))
                storePassword = keystoreProperties.getProperty("storePassword")
            } else {
                logger.warn("Release signing configuration not found, using debug")
                // Fallback to debug signing
                this.keyAlias = "androiddebugkey"
                this.keyPassword = "android"
                this.storeFile = rootProject.file("${System.getProperty("user.home")}/.android/debug.keystore")
                this.storePassword = "android"
            }
        }
        // Add debug signing config
        getByName("debug") {
            keyAlias = "androiddebugkey"
            keyPassword = "android"
            storeFile = rootProject.file("${System.getProperty("user.home")}/.android/debug.keystore")
            storePassword = "android"
        }
    }

    defaultConfig {
        applicationId = "com.example.flavorizr"

        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        getByName("release") {
            signingConfig = signingConfigs.getByName("release")
            isMinifyEnabled = true
            isShrinkResources = true
            isDebuggable = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
        getByName("debug") {
            signingConfig = signingConfigs.getByName("debug")
            isDebuggable = true
            // Enable debug signing for all flavors
            matchingFallbacks.add("debug")
        }
    }
}

flutter {
    source = "../.."
}
// ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
apply { from("flavorizr.gradle.kts") }
// ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----


dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.1.10")
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")
    implementation("androidx.multidex:multidex:2.0.1")
    implementation(platform("com.google.firebase:firebase-bom:34.2.0"))
    
    // Add flavor-specific dependencies if needed
    // "devImplementation"("com.google.firebase:firebase-analytics-ktx")
    // "stagingImplementation"("com.google.firebase:firebase-analytics-ktx")
    // "prodImplementation"("com.google.firebase:firebase-analytics-ktx")
}